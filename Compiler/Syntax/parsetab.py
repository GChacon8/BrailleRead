
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftADDSUBleftMULDIVrightUMINUSADD ALTER ALTER_B ARITH_OP AT BOOL BOOLEAN BREAK CALL CASE COMMA COMMENT DIV ELSE EQUAL False GREATER_THAN GREATER_THAN_EQUAL ID IS_TRUE LESS_THAN LESS_THAN_EQUAL LPAREN MASTER MUL NEW NOT_EQUAL NUM NUMBER PRINT_VALUES PROC REL_OP REPEAT RPAREN SEMICOLON SIGNAL STRING SUB THEN TRUE UNTIL VALUES VIEW_SIGNAL WHEN WHILEprogram : procedure_setprocedure_set : procedure procedure_setprocedure_set : procedureprocedure : PROC ID LPAREN statements RPAREN SEMICOLONstatements : statement\n                  | statement statementsstatement : variable_declaration SEMICOLON\n                 | variable_update SEMICOLON\n                 | alter_variable SEMICOLON\n                 | variable_with_alter SEMICOLON\n                 | alter_b_variable SEMICOLON\n                 | signal_function SEMICOLON\n                 | view_signal_function SEMICOLON\n                 | is_true_function SEMICOLON\n                 | case_statement SEMICOLON\n                 | while_statement SEMICOLON\n                 | procedure_call SEMICOLON\n                 | print_statement SEMICOLON\n                 | emptyvariable_declaration : NEW ID COMMA type_valuetype_value : LPAREN type COMMA value RPARENtype : NUM\n            | BOOL\n            | STRINGvalue : NUMBER\n             | BOOLEAN\n             | STRING\n             | ID\n             | arith_oparith_op : math_operationmath_operation : math_operation operator math_operationmath_operation : math_operation operator math_valuemath_operation : math_value operator math_operationmath_operation : math_value operator math_valuemath_operation_paren : LPAREN math_operation RPARENmath_value : ID\n                  | NUMBER\n                  | math_value_negative\n                  | math_operation_parenmath_value_negative : SUB ID %prec UMINUS\n                           | SUB NUMBER %prec UMINUS operator : ADD\n                | SUB\n                | MUL\n                | DIV\n                | REL_OPvariable_update : VALUES LPAREN ID COMMA value RPARENalter_variable : ALTER LPAREN ID COMMA operator COMMA value RPARENvariable_with_alter : VALUES LPAREN ID COMMA alter_variable RPARENalter_b_variable : ALTER_B LPAREN ID RPARENsignal_function : SIGNAL LPAREN position_state COMMA position_state RPARENposition_state : valueview_signal_function : VIEW_SIGNAL LPAREN position_state RPARENis_true_function : IS_TRUE LPAREN ID RPARENcase_statement : CASE ID case_options\n                      | CASE ID case_options else_optioncase_options : when_statement\n                    | when_statement case_optionswhen_statement : WHEN value THEN LPAREN statements RPARENelse_option : ELSE LPAREN statements RPARENwhile_statement : WHILE condition LPAREN statements RPARENcondition : value\n                 | is_true_functionprocedure_call : CALL LPAREN ID RPARENprint_statement : PRINT_VALUES LPAREN print_value_list RPARENprint_value_list : print_value\n                        | print_value COMMA print_value_listprint_value : value\n                   | is_true_function\n                   | view_signal_functionempty : '
    
_lr_action_items = {'PROC':([0,3,72,],[4,4,-4,]),'$end':([1,2,3,5,72,],[0,-1,-3,-2,-4,]),'ID':([4,23,30,31,49,50,51,52,53,54,57,69,70,71,83,88,89,90,91,92,93,94,105,108,123,136,139,],[6,48,55,63,74,75,76,63,63,80,86,95,97,63,63,86,-42,-43,-44,-45,-46,86,63,63,63,63,63,]),'LPAREN':([6,24,25,26,27,28,29,31,32,33,52,53,56,57,58,59,60,61,62,63,64,65,67,68,71,73,83,86,87,88,89,90,91,92,93,94,95,96,105,108,110,112,116,117,118,119,120,123,133,136,139,],[7,49,50,51,52,53,54,57,70,71,57,57,84,57,-62,-63,-25,-26,-27,-28,-29,-30,-38,-39,57,104,57,-36,-37,57,-42,-43,-44,-45,-46,57,-40,-41,57,57,-54,132,-35,-31,-32,-34,-33,57,142,57,57,]),'NEW':([7,9,22,36,37,38,39,40,41,42,43,44,45,46,47,84,132,142,],[23,23,-19,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,23,23,23,]),'VALUES':([7,9,22,36,37,38,39,40,41,42,43,44,45,46,47,84,132,142,],[24,24,-19,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,24,24,24,]),'ALTER':([7,9,22,36,37,38,39,40,41,42,43,44,45,46,47,84,105,132,142,],[25,25,-19,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,25,25,25,25,]),'ALTER_B':([7,9,22,36,37,38,39,40,41,42,43,44,45,46,47,84,132,142,],[26,26,-19,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,26,26,26,]),'SIGNAL':([7,9,22,36,37,38,39,40,41,42,43,44,45,46,47,84,132,142,],[27,27,-19,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,27,27,27,]),'VIEW_SIGNAL':([7,9,22,36,37,38,39,40,41,42,43,44,45,46,47,71,84,123,132,142,],[28,28,-19,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,28,28,28,28,28,]),'IS_TRUE':([7,9,22,31,36,37,38,39,40,41,42,43,44,45,46,47,71,84,123,132,142,],[29,29,-19,29,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,29,29,29,29,29,]),'CASE':([7,9,22,36,37,38,39,40,41,42,43,44,45,46,47,84,132,142,],[30,30,-19,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,30,30,30,]),'WHILE':([7,9,22,36,37,38,39,40,41,42,43,44,45,46,47,84,132,142,],[31,31,-19,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,31,31,31,]),'CALL':([7,9,22,36,37,38,39,40,41,42,43,44,45,46,47,84,132,142,],[32,32,-19,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,32,32,32,]),'PRINT_VALUES':([7,9,22,36,37,38,39,40,41,42,43,44,45,46,47,84,132,142,],[33,33,-19,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,33,33,33,]),'RPAREN':([7,8,9,22,35,36,37,38,39,40,41,42,43,44,45,46,47,60,61,62,63,64,65,67,68,76,78,79,80,84,85,86,87,95,96,97,98,99,100,101,102,109,110,115,116,117,118,119,120,128,129,131,132,135,141,142,143,144,146,148,],[-71,34,-5,-19,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-25,-26,-27,-28,-29,-30,-38,-39,107,-52,109,110,-71,116,-36,-37,-40,-41,121,122,-66,-68,-69,-70,-53,-54,134,-35,-31,-32,-34,-33,137,138,140,-71,-67,145,-71,147,148,149,-48,]),'SEMICOLON':([10,11,12,13,14,15,16,17,18,19,20,21,34,81,82,103,107,109,110,111,113,121,122,134,137,138,140,145,147,148,149,],[36,37,38,39,40,41,42,43,44,45,46,47,72,-55,-57,-20,-50,-53,-54,-56,-58,-64,-65,-61,-47,-49,-51,-60,-21,-48,-59,]),'NUMBER':([31,52,53,57,69,71,83,88,89,90,91,92,93,94,105,108,123,136,139,],[60,60,60,87,96,60,60,87,-42,-43,-44,-45,-46,87,60,60,60,60,60,]),'BOOLEAN':([31,52,53,71,83,105,108,123,136,139,],[61,61,61,61,61,61,61,61,61,61,]),'STRING':([31,52,53,71,83,104,105,108,123,136,139,],[62,62,62,62,62,127,62,62,62,62,62,]),'SUB':([31,52,53,57,60,63,65,66,67,68,71,83,85,86,87,88,89,90,91,92,93,94,95,96,105,106,108,116,117,118,119,120,123,136,139,],[69,69,69,69,-37,-36,90,90,-38,-39,69,69,90,-36,-37,69,-42,-43,-44,-45,-46,69,-40,-41,69,90,69,-35,90,90,90,90,69,69,69,]),'COMMA':([48,60,61,62,63,64,65,67,68,74,75,77,78,86,87,89,90,91,92,93,95,96,99,100,101,102,109,110,116,117,118,119,120,124,125,126,127,130,],[73,-25,-26,-27,-28,-29,-30,-38,-39,105,106,108,-52,-36,-37,-42,-43,-44,-45,-46,-40,-41,123,-68,-69,-70,-53,-54,-35,-31,-32,-34,-33,136,-22,-23,-24,139,]),'WHEN':([55,82,149,],[83,83,-59,]),'THEN':([60,61,62,63,64,65,67,68,86,87,95,96,114,116,117,118,119,120,],[-25,-26,-27,-28,-29,-30,-38,-39,-36,-37,-40,-41,133,-35,-31,-32,-34,-33,]),'ADD':([60,63,65,66,67,68,85,86,87,95,96,106,116,117,118,119,120,],[-37,-36,89,89,-38,-39,89,-36,-37,-40,-41,89,-35,89,89,89,89,]),'MUL':([60,63,65,66,67,68,85,86,87,95,96,106,116,117,118,119,120,],[-37,-36,91,91,-38,-39,91,-36,-37,-40,-41,91,-35,91,91,91,91,]),'DIV':([60,63,65,66,67,68,85,86,87,95,96,106,116,117,118,119,120,],[-37,-36,92,92,-38,-39,92,-36,-37,-40,-41,92,-35,92,92,92,92,]),'REL_OP':([60,63,65,66,67,68,85,86,87,95,96,106,116,117,118,119,120,],[-37,-36,93,93,-38,-39,93,-36,-37,-40,-41,93,-35,93,93,93,93,]),'ELSE':([81,82,113,149,],[112,-57,-58,-59,]),'NUM':([104,],[125,]),'BOOL':([104,],[126,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'procedure_set':([0,3,],[2,5,]),'procedure':([0,3,],[3,3,]),'statements':([7,9,84,132,142,],[8,35,115,141,146,]),'statement':([7,9,84,132,142,],[9,9,9,9,9,]),'variable_declaration':([7,9,84,132,142,],[10,10,10,10,10,]),'variable_update':([7,9,84,132,142,],[11,11,11,11,11,]),'alter_variable':([7,9,84,105,132,142,],[12,12,12,129,12,12,]),'variable_with_alter':([7,9,84,132,142,],[13,13,13,13,13,]),'alter_b_variable':([7,9,84,132,142,],[14,14,14,14,14,]),'signal_function':([7,9,84,132,142,],[15,15,15,15,15,]),'view_signal_function':([7,9,71,84,123,132,142,],[16,16,102,16,102,16,16,]),'is_true_function':([7,9,31,71,84,123,132,142,],[17,17,59,101,17,101,17,17,]),'case_statement':([7,9,84,132,142,],[18,18,18,18,18,]),'while_statement':([7,9,84,132,142,],[19,19,19,19,19,]),'procedure_call':([7,9,84,132,142,],[20,20,20,20,20,]),'print_statement':([7,9,84,132,142,],[21,21,21,21,21,]),'empty':([7,9,84,132,142,],[22,22,22,22,22,]),'condition':([31,],[56,]),'value':([31,52,53,71,83,105,108,123,136,139,],[58,78,78,100,114,128,78,100,143,144,]),'arith_op':([31,52,53,71,83,105,108,123,136,139,],[64,64,64,64,64,64,64,64,64,64,]),'math_operation':([31,52,53,57,71,83,88,94,105,108,123,136,139,],[65,65,65,85,65,65,117,120,65,65,65,65,65,]),'math_value':([31,52,53,57,71,83,88,94,105,108,123,136,139,],[66,66,66,66,66,66,118,119,66,66,66,66,66,]),'math_value_negative':([31,52,53,57,71,83,88,94,105,108,123,136,139,],[67,67,67,67,67,67,67,67,67,67,67,67,67,]),'math_operation_paren':([31,52,53,57,71,83,88,94,105,108,123,136,139,],[68,68,68,68,68,68,68,68,68,68,68,68,68,]),'position_state':([52,53,108,],[77,79,131,]),'case_options':([55,82,],[81,113,]),'when_statement':([55,82,],[82,82,]),'operator':([65,66,85,106,117,118,119,120,],[88,94,88,130,88,94,94,88,]),'print_value_list':([71,123,],[98,135,]),'print_value':([71,123,],[99,99,]),'type_value':([73,],[103,]),'else_option':([81,],[111,]),'type':([104,],[124,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> procedure_set','program',1,'p_program','parser.py',21),
  ('procedure_set -> procedure procedure_set','procedure_set',2,'p_procedure_set','parser.py',26),
  ('procedure_set -> procedure','procedure_set',1,'p_procedure_set_2','parser.py',31),
  ('procedure -> PROC ID LPAREN statements RPAREN SEMICOLON','procedure',6,'p_procedure','parser.py',36),
  ('statements -> statement','statements',1,'p_statemets','parser.py',44),
  ('statements -> statement statements','statements',2,'p_statemets','parser.py',45),
  ('statement -> variable_declaration SEMICOLON','statement',2,'p_statement','parser.py',53),
  ('statement -> variable_update SEMICOLON','statement',2,'p_statement','parser.py',54),
  ('statement -> alter_variable SEMICOLON','statement',2,'p_statement','parser.py',55),
  ('statement -> variable_with_alter SEMICOLON','statement',2,'p_statement','parser.py',56),
  ('statement -> alter_b_variable SEMICOLON','statement',2,'p_statement','parser.py',57),
  ('statement -> signal_function SEMICOLON','statement',2,'p_statement','parser.py',58),
  ('statement -> view_signal_function SEMICOLON','statement',2,'p_statement','parser.py',59),
  ('statement -> is_true_function SEMICOLON','statement',2,'p_statement','parser.py',60),
  ('statement -> case_statement SEMICOLON','statement',2,'p_statement','parser.py',61),
  ('statement -> while_statement SEMICOLON','statement',2,'p_statement','parser.py',62),
  ('statement -> procedure_call SEMICOLON','statement',2,'p_statement','parser.py',63),
  ('statement -> print_statement SEMICOLON','statement',2,'p_statement','parser.py',64),
  ('statement -> empty','statement',1,'p_statement','parser.py',65),
  ('variable_declaration -> NEW ID COMMA type_value','variable_declaration',4,'p_variable_declaration','parser.py',70),
  ('type_value -> LPAREN type COMMA value RPAREN','type_value',5,'p_type_value','parser.py',75),
  ('type -> NUM','type',1,'p_type','parser.py',80),
  ('type -> BOOL','type',1,'p_type','parser.py',81),
  ('type -> STRING','type',1,'p_type','parser.py',82),
  ('value -> NUMBER','value',1,'p_value','parser.py',87),
  ('value -> BOOLEAN','value',1,'p_value','parser.py',88),
  ('value -> STRING','value',1,'p_value','parser.py',89),
  ('value -> ID','value',1,'p_value','parser.py',90),
  ('value -> arith_op','value',1,'p_value','parser.py',91),
  ('arith_op -> math_operation','arith_op',1,'p_arithmetic','parser.py',96),
  ('math_operation -> math_operation operator math_operation','math_operation',3,'p_math_operator_1','parser.py',101),
  ('math_operation -> math_operation operator math_value','math_operation',3,'p_math_operator_2','parser.py',106),
  ('math_operation -> math_value operator math_operation','math_operation',3,'p_math_operator_3','parser.py',111),
  ('math_operation -> math_value operator math_value','math_operation',3,'p_math_operator_4','parser.py',116),
  ('math_operation_paren -> LPAREN math_operation RPAREN','math_operation_paren',3,'p_math_operation_5','parser.py',121),
  ('math_value -> ID','math_value',1,'p_math_value','parser.py',126),
  ('math_value -> NUMBER','math_value',1,'p_math_value','parser.py',127),
  ('math_value -> math_value_negative','math_value',1,'p_math_value','parser.py',128),
  ('math_value -> math_operation_paren','math_value',1,'p_math_value','parser.py',129),
  ('math_value_negative -> SUB ID','math_value_negative',2,'p_math_value_negative','parser.py',134),
  ('math_value_negative -> SUB NUMBER','math_value_negative',2,'p_math_value_negative','parser.py',135),
  ('operator -> ADD','operator',1,'p_operator','parser.py',140),
  ('operator -> SUB','operator',1,'p_operator','parser.py',141),
  ('operator -> MUL','operator',1,'p_operator','parser.py',142),
  ('operator -> DIV','operator',1,'p_operator','parser.py',143),
  ('operator -> REL_OP','operator',1,'p_operator','parser.py',144),
  ('variable_update -> VALUES LPAREN ID COMMA value RPAREN','variable_update',6,'p_variable_update','parser.py',158),
  ('alter_variable -> ALTER LPAREN ID COMMA operator COMMA value RPAREN','alter_variable',8,'p_alter_variable','parser.py',163),
  ('variable_with_alter -> VALUES LPAREN ID COMMA alter_variable RPAREN','variable_with_alter',6,'p_variable_with_alter','parser.py',168),
  ('alter_b_variable -> ALTER_B LPAREN ID RPAREN','alter_b_variable',4,'p_alter_b_variable','parser.py',173),
  ('signal_function -> SIGNAL LPAREN position_state COMMA position_state RPAREN','signal_function',6,'p_signal_function','parser.py',178),
  ('position_state -> value','position_state',1,'p_position_state','parser.py',183),
  ('view_signal_function -> VIEW_SIGNAL LPAREN position_state RPAREN','view_signal_function',4,'p_view_signal_function','parser.py',188),
  ('is_true_function -> IS_TRUE LPAREN ID RPAREN','is_true_function',4,'p_is_true_function','parser.py',193),
  ('case_statement -> CASE ID case_options','case_statement',3,'p_case_statement','parser.py',198),
  ('case_statement -> CASE ID case_options else_option','case_statement',4,'p_case_statement','parser.py',199),
  ('case_options -> when_statement','case_options',1,'p_case_options','parser.py',207),
  ('case_options -> when_statement case_options','case_options',2,'p_case_options','parser.py',208),
  ('when_statement -> WHEN value THEN LPAREN statements RPAREN','when_statement',6,'p_when_statement','parser.py',216),
  ('else_option -> ELSE LPAREN statements RPAREN','else_option',4,'p_else_option','parser.py',221),
  ('while_statement -> WHILE condition LPAREN statements RPAREN','while_statement',5,'p_while_statement','parser.py',226),
  ('condition -> value','condition',1,'p_condition','parser.py',231),
  ('condition -> is_true_function','condition',1,'p_condition','parser.py',232),
  ('procedure_call -> CALL LPAREN ID RPAREN','procedure_call',4,'p_procedure_call','parser.py',236),
  ('print_statement -> PRINT_VALUES LPAREN print_value_list RPAREN','print_statement',4,'p_print_statement','parser.py',241),
  ('print_value_list -> print_value','print_value_list',1,'p_print_value_list','parser.py',246),
  ('print_value_list -> print_value COMMA print_value_list','print_value_list',3,'p_print_value_list','parser.py',247),
  ('print_value -> value','print_value',1,'p_print_value','parser.py',254),
  ('print_value -> is_true_function','print_value',1,'p_print_value','parser.py',255),
  ('print_value -> view_signal_function','print_value',1,'p_print_value','parser.py',256),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',260),
]
