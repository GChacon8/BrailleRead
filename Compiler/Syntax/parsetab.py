
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftADDSUBleftMULDIVrightUMINUSADD ALTER ALTER_B ARITH_OP AT BOOL BOOLEAN BREAK CALL CASE COMMA COMMENT DIV ELSE EQUAL False GREATER_THAN GREATER_THAN_EQUAL ID IS_TRUE LESS_THAN LESS_THAN_EQUAL LPAREN MASTER MUL NEW NOT_EQUAL NUM NUMBER PRINT_VALUES PROC REL_OP REPEAT RPAREN SEMICOLON SIGNAL STRING SUB THEN TRUE UNTIL VALUES VIEW_SIGNAL WHEN WHILEprogram : procedure_setprocedure_set : procedure procedure_setprocedure_set : procedureprocedure : PROC ID LPAREN statements RPAREN SEMICOLONstatements : statement\n                  | statement statementsstatement : variable_declaration SEMICOLON\n                 | variable_update SEMICOLON\n                 | alter_variable SEMICOLON\n                 | variable_with_alter SEMICOLON\n                 | alter_b_variable SEMICOLON\n                 | signal_function SEMICOLON\n                 | view_signal_function SEMICOLON\n                 | is_true_function SEMICOLON\n                 | case_statement SEMICOLON\n                 | procedure_call SEMICOLON\n                 | print_statement SEMICOLON\n                 | emptyvariable_declaration : NEW ID COMMA type_valuetype_value : LPAREN type COMMA value RPARENtype : NUM\n            | BOOL\n            | STRINGvalue : NUMBER\n             | BOOLEAN\n             | STRING\n             | ID\n             | arith_oparith_op : math_operationmath_operation : math_operation operator math_operationmath_operation : math_operation operator math_valuemath_operation : math_value operator math_operationmath_operation : math_value operator math_valuemath_operation_paren : LPAREN math_operation RPARENmath_value : ID\n                  | NUMBER\n                  | math_value_negative\n                  | math_operation_parenmath_value_negative : SUB ID %prec UMINUS\n                           | SUB NUMBER %prec UMINUS operator : ADD\n                | SUB\n                | MUL\n                | DIV\n                | REL_OPvariable_update : VALUES LPAREN ID COMMA value RPARENalter_variable : ALTER LPAREN ID COMMA operator COMMA value RPARENvariable_with_alter : VALUES LPAREN ID COMMA alter_variable RPARENalter_b_variable : ALTER_B LPAREN ID RPARENsignal_function : SIGNAL LPAREN position_state COMMA position_state RPARENposition_state : valueview_signal_function : VIEW_SIGNAL LPAREN position_state RPARENis_true_function : IS_TRUE LPAREN ID RPARENcase_statement : CASE ID case_options\n                      | CASE ID case_options else_optioncase_options : when_statement\n                    | when_statement case_optionswhen_statement : WHEN value THEN LPAREN statements RPARENelse_option : ELSE LPAREN statements RPARENprocedure_call : CALL LPAREN ID RPARENprint_statement : PRINT_VALUES LPAREN print_value_list RPARENprint_value_list : print_value\n                        | print_value COMMA print_value_listprint_value : value\n                   | is_true_function\n                   | view_signal_functionempty : '
    
_lr_action_items = {'PROC':([0,3,55,],[4,4,-4,]),'$end':([1,2,3,5,55,],[0,-1,-3,-2,-4,]),'ID':([4,22,29,46,47,48,49,50,51,53,54,60,72,77,86,92,93,94,95,96,97,98,99,110,127,130,],[6,45,52,57,58,59,66,66,74,78,66,90,100,66,66,66,90,-41,-42,-43,-44,-45,90,66,66,66,]),'LPAREN':([6,23,24,25,26,27,28,30,31,49,50,54,56,60,77,86,92,93,94,95,96,97,98,99,105,110,125,127,130,],[7,46,47,48,49,50,51,53,54,60,60,60,85,60,60,60,60,60,-41,-42,-43,-44,-45,60,124,60,133,60,60,]),'NEW':([7,9,21,34,35,36,37,38,39,40,41,42,43,44,124,133,],[22,22,-18,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,22,22,]),'VALUES':([7,9,21,34,35,36,37,38,39,40,41,42,43,44,124,133,],[23,23,-18,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,23,23,]),'ALTER':([7,9,21,34,35,36,37,38,39,40,41,42,43,44,86,124,133,],[24,24,-18,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,24,24,24,]),'ALTER_B':([7,9,21,34,35,36,37,38,39,40,41,42,43,44,124,133,],[25,25,-18,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,25,25,]),'SIGNAL':([7,9,21,34,35,36,37,38,39,40,41,42,43,44,124,133,],[26,26,-18,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,26,26,]),'VIEW_SIGNAL':([7,9,21,34,35,36,37,38,39,40,41,42,43,44,54,110,124,133,],[27,27,-18,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,27,27,27,27,]),'IS_TRUE':([7,9,21,34,35,36,37,38,39,40,41,42,43,44,54,110,124,133,],[28,28,-18,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,28,28,28,28,]),'CASE':([7,9,21,34,35,36,37,38,39,40,41,42,43,44,124,133,],[29,29,-18,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,29,29,]),'CALL':([7,9,21,34,35,36,37,38,39,40,41,42,43,44,124,133,],[30,30,-18,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,30,30,]),'PRINT_VALUES':([7,9,21,34,35,36,37,38,39,40,41,42,43,44,124,133,],[31,31,-18,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,31,31,]),'RPAREN':([7,8,9,21,33,34,35,36,37,38,39,40,41,42,43,44,59,62,63,64,65,66,67,68,70,71,73,74,78,79,80,81,82,83,89,90,91,100,101,102,103,115,116,118,119,120,121,122,123,124,126,132,133,134,135,137,139,],[-67,32,-5,-18,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,88,-51,-24,-25,-26,-27,-28,-29,-37,-38,102,103,108,109,-62,-64,-65,-66,118,-35,-36,-39,-40,-52,-53,128,129,-34,131,-30,-31,-33,-32,-67,-63,136,-67,138,139,140,-47,]),'SEMICOLON':([10,11,12,13,14,15,16,17,18,19,20,32,75,76,84,88,102,103,104,106,108,109,128,129,131,136,138,139,140,],[34,35,36,37,38,39,40,41,42,43,44,55,-54,-56,-19,-49,-52,-53,-55,-57,-60,-61,-46,-48,-50,-59,-20,-47,-58,]),'COMMA':([45,57,58,61,62,63,64,65,66,67,68,70,71,80,81,82,83,90,91,94,95,96,97,98,100,101,102,103,111,112,113,114,117,118,120,121,122,123,],[56,86,87,92,-51,-24,-25,-26,-27,-28,-29,-37,-38,110,-64,-65,-66,-35,-36,-41,-42,-43,-44,-45,-39,-40,-52,-53,127,-21,-22,-23,130,-34,-30,-31,-33,-32,]),'NUMBER':([49,50,54,60,72,77,86,92,93,94,95,96,97,98,99,110,127,130,],[63,63,63,91,101,63,63,63,91,-41,-42,-43,-44,-45,91,63,63,63,]),'BOOLEAN':([49,50,54,77,86,92,110,127,130,],[64,64,64,64,64,64,64,64,64,]),'STRING':([49,50,54,77,85,86,92,110,127,130,],[65,65,65,65,114,65,65,65,65,65,]),'SUB':([49,50,54,60,63,66,68,69,70,71,77,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,110,118,120,121,122,123,127,130,],[72,72,72,72,-36,-35,95,95,-37,-38,72,72,95,95,-35,-36,72,72,-41,-42,-43,-44,-45,72,-39,-40,72,-34,95,95,95,95,72,72,]),'WHEN':([52,76,140,],[77,77,-58,]),'THEN':([63,64,65,66,67,68,70,71,90,91,100,101,107,118,120,121,122,123,],[-24,-25,-26,-27,-28,-29,-37,-38,-35,-36,-39,-40,125,-34,-30,-31,-33,-32,]),'ADD':([63,66,68,69,70,71,87,89,90,91,100,101,118,120,121,122,123,],[-36,-35,94,94,-37,-38,94,94,-35,-36,-39,-40,-34,94,94,94,94,]),'MUL':([63,66,68,69,70,71,87,89,90,91,100,101,118,120,121,122,123,],[-36,-35,96,96,-37,-38,96,96,-35,-36,-39,-40,-34,96,96,96,96,]),'DIV':([63,66,68,69,70,71,87,89,90,91,100,101,118,120,121,122,123,],[-36,-35,97,97,-37,-38,97,97,-35,-36,-39,-40,-34,97,97,97,97,]),'REL_OP':([63,66,68,69,70,71,87,89,90,91,100,101,118,120,121,122,123,],[-36,-35,98,98,-37,-38,98,98,-35,-36,-39,-40,-34,98,98,98,98,]),'ELSE':([75,76,106,140,],[105,-56,-57,-58,]),'NUM':([85,],[112,]),'BOOL':([85,],[113,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'procedure_set':([0,3,],[2,5,]),'procedure':([0,3,],[3,3,]),'statements':([7,9,124,133,],[8,33,132,137,]),'statement':([7,9,124,133,],[9,9,9,9,]),'variable_declaration':([7,9,124,133,],[10,10,10,10,]),'variable_update':([7,9,124,133,],[11,11,11,11,]),'alter_variable':([7,9,86,124,133,],[12,12,116,12,12,]),'variable_with_alter':([7,9,124,133,],[13,13,13,13,]),'alter_b_variable':([7,9,124,133,],[14,14,14,14,]),'signal_function':([7,9,124,133,],[15,15,15,15,]),'view_signal_function':([7,9,54,110,124,133,],[16,16,83,83,16,16,]),'is_true_function':([7,9,54,110,124,133,],[17,17,82,82,17,17,]),'case_statement':([7,9,124,133,],[18,18,18,18,]),'procedure_call':([7,9,124,133,],[19,19,19,19,]),'print_statement':([7,9,124,133,],[20,20,20,20,]),'empty':([7,9,124,133,],[21,21,21,21,]),'position_state':([49,50,92,],[61,73,119,]),'value':([49,50,54,77,86,92,110,127,130,],[62,62,81,107,115,62,81,134,135,]),'arith_op':([49,50,54,77,86,92,110,127,130,],[67,67,67,67,67,67,67,67,67,]),'math_operation':([49,50,54,60,77,86,92,93,99,110,127,130,],[68,68,68,89,68,68,68,120,123,68,68,68,]),'math_value':([49,50,54,60,77,86,92,93,99,110,127,130,],[69,69,69,69,69,69,69,121,122,69,69,69,]),'math_value_negative':([49,50,54,60,77,86,92,93,99,110,127,130,],[70,70,70,70,70,70,70,70,70,70,70,70,]),'math_operation_paren':([49,50,54,60,77,86,92,93,99,110,127,130,],[71,71,71,71,71,71,71,71,71,71,71,71,]),'case_options':([52,76,],[75,106,]),'when_statement':([52,76,],[76,76,]),'print_value_list':([54,110,],[79,126,]),'print_value':([54,110,],[80,80,]),'type_value':([56,],[84,]),'operator':([68,69,87,89,120,121,122,123,],[93,99,117,93,93,99,99,93,]),'else_option':([75,],[104,]),'type':([85,],[111,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> procedure_set','program',1,'p_program','parser.py',21),
  ('procedure_set -> procedure procedure_set','procedure_set',2,'p_procedure_set','parser.py',26),
  ('procedure_set -> procedure','procedure_set',1,'p_procedure_set_2','parser.py',31),
  ('procedure -> PROC ID LPAREN statements RPAREN SEMICOLON','procedure',6,'p_procedure','parser.py',36),
  ('statements -> statement','statements',1,'p_statemets','parser.py',44),
  ('statements -> statement statements','statements',2,'p_statemets','parser.py',45),
  ('statement -> variable_declaration SEMICOLON','statement',2,'p_statement','parser.py',53),
  ('statement -> variable_update SEMICOLON','statement',2,'p_statement','parser.py',54),
  ('statement -> alter_variable SEMICOLON','statement',2,'p_statement','parser.py',55),
  ('statement -> variable_with_alter SEMICOLON','statement',2,'p_statement','parser.py',56),
  ('statement -> alter_b_variable SEMICOLON','statement',2,'p_statement','parser.py',57),
  ('statement -> signal_function SEMICOLON','statement',2,'p_statement','parser.py',58),
  ('statement -> view_signal_function SEMICOLON','statement',2,'p_statement','parser.py',59),
  ('statement -> is_true_function SEMICOLON','statement',2,'p_statement','parser.py',60),
  ('statement -> case_statement SEMICOLON','statement',2,'p_statement','parser.py',61),
  ('statement -> procedure_call SEMICOLON','statement',2,'p_statement','parser.py',62),
  ('statement -> print_statement SEMICOLON','statement',2,'p_statement','parser.py',63),
  ('statement -> empty','statement',1,'p_statement','parser.py',64),
  ('variable_declaration -> NEW ID COMMA type_value','variable_declaration',4,'p_variable_declaration','parser.py',69),
  ('type_value -> LPAREN type COMMA value RPAREN','type_value',5,'p_type_value','parser.py',74),
  ('type -> NUM','type',1,'p_type','parser.py',79),
  ('type -> BOOL','type',1,'p_type','parser.py',80),
  ('type -> STRING','type',1,'p_type','parser.py',81),
  ('value -> NUMBER','value',1,'p_value','parser.py',86),
  ('value -> BOOLEAN','value',1,'p_value','parser.py',87),
  ('value -> STRING','value',1,'p_value','parser.py',88),
  ('value -> ID','value',1,'p_value','parser.py',89),
  ('value -> arith_op','value',1,'p_value','parser.py',90),
  ('arith_op -> math_operation','arith_op',1,'p_arithmetic','parser.py',95),
  ('math_operation -> math_operation operator math_operation','math_operation',3,'p_math_operator_1','parser.py',100),
  ('math_operation -> math_operation operator math_value','math_operation',3,'p_math_operator_2','parser.py',105),
  ('math_operation -> math_value operator math_operation','math_operation',3,'p_math_operator_3','parser.py',110),
  ('math_operation -> math_value operator math_value','math_operation',3,'p_math_operator_4','parser.py',115),
  ('math_operation_paren -> LPAREN math_operation RPAREN','math_operation_paren',3,'p_math_operation_5','parser.py',120),
  ('math_value -> ID','math_value',1,'p_math_value','parser.py',125),
  ('math_value -> NUMBER','math_value',1,'p_math_value','parser.py',126),
  ('math_value -> math_value_negative','math_value',1,'p_math_value','parser.py',127),
  ('math_value -> math_operation_paren','math_value',1,'p_math_value','parser.py',128),
  ('math_value_negative -> SUB ID','math_value_negative',2,'p_math_value_negative','parser.py',133),
  ('math_value_negative -> SUB NUMBER','math_value_negative',2,'p_math_value_negative','parser.py',134),
  ('operator -> ADD','operator',1,'p_operator','parser.py',139),
  ('operator -> SUB','operator',1,'p_operator','parser.py',140),
  ('operator -> MUL','operator',1,'p_operator','parser.py',141),
  ('operator -> DIV','operator',1,'p_operator','parser.py',142),
  ('operator -> REL_OP','operator',1,'p_operator','parser.py',143),
  ('variable_update -> VALUES LPAREN ID COMMA value RPAREN','variable_update',6,'p_variable_update','parser.py',157),
  ('alter_variable -> ALTER LPAREN ID COMMA operator COMMA value RPAREN','alter_variable',8,'p_alter_variable','parser.py',162),
  ('variable_with_alter -> VALUES LPAREN ID COMMA alter_variable RPAREN','variable_with_alter',6,'p_variable_with_alter','parser.py',167),
  ('alter_b_variable -> ALTER_B LPAREN ID RPAREN','alter_b_variable',4,'p_alter_b_variable','parser.py',172),
  ('signal_function -> SIGNAL LPAREN position_state COMMA position_state RPAREN','signal_function',6,'p_signal_function','parser.py',177),
  ('position_state -> value','position_state',1,'p_position_state','parser.py',182),
  ('view_signal_function -> VIEW_SIGNAL LPAREN position_state RPAREN','view_signal_function',4,'p_view_signal_function','parser.py',187),
  ('is_true_function -> IS_TRUE LPAREN ID RPAREN','is_true_function',4,'p_is_true_function','parser.py',192),
  ('case_statement -> CASE ID case_options','case_statement',3,'p_case_statement','parser.py',197),
  ('case_statement -> CASE ID case_options else_option','case_statement',4,'p_case_statement','parser.py',198),
  ('case_options -> when_statement','case_options',1,'p_case_options','parser.py',206),
  ('case_options -> when_statement case_options','case_options',2,'p_case_options','parser.py',207),
  ('when_statement -> WHEN value THEN LPAREN statements RPAREN','when_statement',6,'p_when_statement','parser.py',215),
  ('else_option -> ELSE LPAREN statements RPAREN','else_option',4,'p_else_option','parser.py',220),
  ('procedure_call -> CALL LPAREN ID RPAREN','procedure_call',4,'p_procedure_call','parser.py',225),
  ('print_statement -> PRINT_VALUES LPAREN print_value_list RPAREN','print_statement',4,'p_print_statement','parser.py',230),
  ('print_value_list -> print_value','print_value_list',1,'p_print_value_list','parser.py',235),
  ('print_value_list -> print_value COMMA print_value_list','print_value_list',3,'p_print_value_list','parser.py',236),
  ('print_value -> value','print_value',1,'p_print_value','parser.py',243),
  ('print_value -> is_true_function','print_value',1,'p_print_value','parser.py',244),
  ('print_value -> view_signal_function','print_value',1,'p_print_value','parser.py',245),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',249),
]
